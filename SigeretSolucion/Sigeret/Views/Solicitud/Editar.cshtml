@model Sigeret.Models.ViewModels.SolicitudViewModel

@{
    ViewBag.Title = "Editar Solicitud";
    List<Tuple<String, String>> cantidadSel = new List<Tuple<string, string>>();
    cantidadSel = ViewBag.cantidadSel;
}

<div class="row">
    <div class="col-lg-12">
        <hgroup class="title">
            <h2>Editar Solicitud</h2>
        </hgroup>
        <div class="well">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count() > 0)
                { 
                <div class="alert alert-dismissable alert-danger">
                    <button type="button" class="close" data-dismiss="alert">×</button>
                    @Html.ValidationSummary(true)
                </div>
                }
                <fieldset>
                    <legend>Datos de la Solicitud a editar</legend>

                    @Html.HiddenFor(model => model.Id)

                    <div class="row">
                        <div class="form-group col-lg-4">
                            @Html.CLabelFor(model => model.Fecha)
                            <div class="input-group">
                                @Html.CTextBoxFor(model => model.Fecha, new { @class = "fechaFutura", Value = (Model == null) ? "" : Model.Fecha.ToString("yyyy/MM/dd") })
                                <label for="Fecha" class="input-group-addon btn">
                                    <i class="glyphicon glyphicon-calendar"></i>
                                </label>
                            </div>
                            @Html.CValidationMessageFor(model => model.Fecha)
                        </div>
                        <div class="form-group col-lg-4">
                            @Html.CLabelFor(model => model.HoraInicio)
                            <div class="input-group">
                                @Html.CTextBoxFor(model => model.HoraInicio, new { @class = "CtimePicker" })
                                <label for="HoraInicio" class="input-group-addon btn">
                                    <i class="glyphicon glyphicon-time"></i>
                                </label>
                            </div>
                            @Html.CValidationMessageFor(model => model.HoraInicio)
                        </div>
                        <div class="form-group col-lg-4">
                            @Html.CLabelFor(model => model.HoraFin)
                            <div class="input-group">
                                @Html.CTextBoxFor(model => model.HoraFin, new { @class = "CtimePicker" })
                                <label for="HoraFin" class="input-group-addon btn">
                                    <i class="glyphicon glyphicon-time"></i>
                                </label>
                            </div>
                            @Html.CValidationMessageFor(model => model.HoraFin)
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-lg-12">
                            @Html.CLabelFor(model => model.Descripcion)
                            @Html.CTextAreaFor(model => model.Descripcion)
                            @Html.CValidationMessageFor(model => model.Descripcion)
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-lg-6">
                            @Html.CLabelFor(model => model.EdificioId)
                            @Html.CDropDownListFor(model => model.EdificioId, null, "--Seleccione Edificio--", new { @class = "chosen" })
                            @Html.CValidationMessageFor(model => model.EdificioId)
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.CLabelFor(model => model.SalonId)
                            @Html.CDropDownListFor(model => model.SalonId, null, "--Seleccione Salon--", new { @class = "chosen" })
                            @Html.CValidationMessageFor(model => model.SalonId)
                        </div>
                    </div>
                </fieldset>
     
                <div id="ModelMensaje" style="color: red; font-size: x-large; font-weight: bold">
                    @ViewBag.Seleccionar
                    <br />
                </div>

                <fieldset>
                    <legend>Editar Equipos Seleccionados</legend>
                    <div id="PartialModeloEquipo">
                        @Html.Partial("PartialModeloEquipo", Model.modelos)
                    </div>
                    @*<div class="row">
                        <div class="form-group col-lg-2">
                            @Html.Label("Cantidad")
                        </div>
                        <div class="form-group col-lg-4">
                            @Html.Label("Nombre")
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.Label("Descripción")
                        </div>
                    </div>*@


                    @*@foreach (var item in ViewBag.ModeloEquipo)
                    {
                        var checkBoxId = "chk" + @item.Id;
                        var hiddenCheckBoxId = "hChk" + @item.Id;
                        var checkBoxValue = @item.Id;
                        var cantidad = "cant" + @item.Id;
                        var td = "td" + @item.Id;
                        <div class="row">
                            <div class="form-group col-lg-2">
                                <div class="input-group col-lg-8">
                                    <span class="input-group-addon">
                                        @{       
                                            var a = 0;

                                            foreach (var modelo in cantidadSel)
                                            {

                                                if (item.Id == Int32.Parse(modelo.Item1))
                                                {
                                                    <input type="checkbox" id="@checkBoxId" name="@checkBoxId" checked="checked" value="@checkBoxValue" class="chkclass" onchange="habilitarCantidad()" />
                                                    <input type="checkbox" id="@hiddenCheckBoxId" name="@hiddenCheckBoxId" style="display:none;" checked="checked" value="@checkBoxValue" class="chkclass" onchange="habilitarCantidad()" />
                                                    a = 1;
                                                }
                                            }

                                            if (a == 0)
                                            {
                                                <input type="checkbox" id="@checkBoxId" name="@checkBoxId" value="@checkBoxValue" class="chkclass" onchange="habilitarCantidad()" />
                                                a = 1;
                                            }
                                        }
                                    </span>
                                    @if (cantidadSel.Count == 0)
                                    {
                                        <input type="text" name="@cantidad" id="@checkBoxId" maxlength="2" class="chkclass" style="width:30px; text-align:center;" value="1" />
                                    }
                                    else
                                    {
                                        var b = 0;
                                        foreach (var cant in cantidadSel)
                                        {
                                            if (item.Id == Int32.Parse(cant.Item1))
                                            {
                                                <input type="text" name="@cantidad" id="@checkBoxId" maxlength="2" class="chkclass form-control col-lg-2" value="@cant.Item2" />
                                                b = 1;
                                            }
                                        }

                                        if (b == 0)
                                        {
                                            <input type="text" name="@cantidad" id="@checkBoxId" maxlength="2" class="chkclass form-control col-lg-2" value="1" />
                                        }
                                    }
                                </div>
                            </div>
                            <div class="form-group col-lg-4">
                                @item.Nombre
                            </div>
                            <div class="form-group col-lg-6">
                                @item.Descripcion
                            </div>
                        </div>
                    }*@

                    <div class="row form-group col-lg-12 pt20">
                        <input type="submit" class="btn btn-primary btnSubmit" value="Guardar" />
                        @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-default" })
                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {

            function FnObtenerEquiposDisponibles() {
                var fechaVar = $('#Fecha').val();
                var horaInicioVar = $('#HoraInicio').val();;
                var horaFinVar = $('#HoraFin').val();
                if (fechaVar != "" && horaFinVar != "" && horaInicioVar != "" && (horaInicioVar < horaFinVar)) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("EquiposDisponibles", "Solicitud")',

                        data: $('.solicitudForm').serialize(),
                        success: function (data) {
                            $('#PartialModeloEquipo').html(data);
                            if (data == null || data == "") {
                                $('.btnSubmit').prop('disabled', true);
                            }
                            else {
                                $('.btnSubmit').prop('disabled', false);
                            }
                        }
                    })
                }
            }

            $("#EdificioId").change(function () {
                updateDropdown(
                    { salonId: $("#EdificioId > option:selected").attr("value") },
                    '@Url.Action("getSalonJson", "Solicitud")',
                    $('#SalonId'),
                    $('#SalonId').chosen()
                );
            });

            $("#Fecha, #HoraInicio, #HoraFin").on('focusout', function () {
                FnObtenerEquiposDisponibles();
            });

            $('.btnGuardar').on('click', function (evt) {
                evt.preventDefault();
                var valid = false;
                var incorrect = false;
                $("input[name$='isSelected']").each(function () {
                    if ($(this).is(':checked')) {
                        if ($('#' + $(this).attr('id') + '.form-control').val() <= 0) {
                            incorrect = true;
                            valid = false;
                            return false;
                        }
                        else {
                            valid = true;
                        }
                    }
                });
                if (valid) {
                    $('.solicitudForm').submit();
                    return true;
                }
                else if (incorrect) {
                    alert('Debe poner una cantidad mayor que cero en los equipos seleccionados');
                }
                else {
                    alert('Debe seleccionar al menos un equipo para poder procesar su solicitud');
                }

                return false;
            });
        });
    </script>
}